<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAEJZJREFUeF7t
        nQlYU9e2x/HdN9zvve8N974+M1hbr4UkOLS21jrVV5KAQ52VoLXq1Vuf11unOlBnBERBEUUccRYFB0BQ
        sShhCCiCDCIiFZVKba1atX21g69Wk/X2OpxEcliQBGKMctb3/T7ljPv8/3vvtfc+kHiIIYYYLSRaqZWS
        LWqFZAH/sxjPMjRKiUajkIJWIX3s217+Cr9ZjGcRviqpj1YluzHkjbZGP2+ZSauUnffxlnTid4vhSAzw
        9Pwn9k+r2p8cD61CEostA80o3zEWMiNHQF9vuQm3qRWyWfxhYtgTGqXsE41S+ptWIavs+5q8Lb/ZoWDC
        B2uVUmO/DnJjbrQODi4eAOy62EoeahSycfxhjYbaU9qRHfs/wR4ef8dvapmhVcnvDerzNvh1eNmoUbWp
        GOD5x3/jdzkUGs/WrzFTLzJTTJwZKkmGj0L+Er/bVrRi3V0VtiiNl+QDflvLDI1KljvgbW/jnLUbuVrt
        q5Sd9PHx+Ht+t0Oh8ZS/haKyazzUqtr8J7/ZZmg8JYM5MxispRXpPDx+x+9qeaHxkk5AIeZt3gUfLwni
        RMGhK7/bKvp1fPmP/OipwXyjUUjmqxXS8fyPNsPHq00XX5Xsrq5bO+PuQL9aUxTSjU2tFG4fmLAbq3F9
        X5f8C+u2fh4zRgdRhVUwYfKkWlO8pIH8IVywmqtmsJzAtYDrrDX05Xc1KdRKuZKZtxVb05DX2xo/3/Nn
        eGSYBSvG9+BNkV1k+ye9UK2l72uS1qz23WNc5kdSZLCR0HatdxvTCn0hrD5TCQEjBpnYNpaUpf78ITiS
        WohChYzoBrq32hlZLTYywVJwhMWNsrxk0Wz/NK1n655du3r8A39ag8G6xwq8nu6d9vBV0iR4nDuLA02J
        naHhTOGMqVOG5z6w+zA/GBtJscpGh0bVuhceMy14GddKVuaUwlBNT6NWKf/Vx1PSA49hBgThMdmLh4Mh
        aDhM+m+VcWCHto8Gd2hnHNzhVTTIIqKvQvoD1n6tp7QDdwMicETlp5R9i8fPHvKG6f6JqZwh2WtGQr+O
        3JCZ5TPJSZ+O/yXlT3m+o7fypX/Fidr4Pl6moV1eYeJKzzbW/Jn4l4eqexjRECQsLQ8w2WvYKKyvUvIn
        JlAwipezZBicCfXnOBf6l9M/L4kH5N6CnXBuajgkjZkOC3y04KeUsxYkNWm9pDt82//h3/nbWAW2JFZR
        5rGyGT8d1sVUtm0s+KnkbIQmu9iYmc9dYEJkYiSzB4X89aMgMeh9ruayZBvFdpMJmR37KR4TlJDKGYIE
        HTgKfh1fRVNwSBrH+ntTfvBIiyEFof73zIYIqZm9ESL6D8MEzZB/3XhrkS7Few/u0pYZKbvzwrQKDG6C
        pZSdxgfc9onW0i+HfNi9tkvxkiZqvGWv8odboo/3SzKWSB9PnDLZYgjy6eYdwAzhZt3+Xds9NpvBY6TM
        qEv+5KWA3ZqvQv6/akXrN/jbWcVgufyffVXS+7Xlky3iNz/fgUawWp6HD4Uz5oOL37ckSuRhzkzYONWH
        n0GzhOwlPeKnfEnOn84F6z6O9nujvXFVXjlvyKXf4pP2FCwbp60e2qXto+W67nXN4CgNHV94KXiu4fsl
        225ShiCVM6JgaOc/PWbd4g0caPC3swrMKawFpzsyf3HrYEl0DZrB+mA4FaOzMqMuSUEDLcmXdSdT+dO5
        YF3LMNw+a/U62HU0+Xx+2OirQgMawVi27KNTPwTtuEOZUvDXEJbsuZa2n7/dix0+Kmk79rCHcF0KW8GW
        6Wr4LecTixG/6GdA2LjaMT4bBv+CoyCc6PGnc4FJFpdSWFI1nZg3RNg92UVBiO7Wd0Gx1ylT1g7SmbvN
        zTiy42/7YgcmRCb2YXzwyI96c2ZgdzV7aBcuDzDWNzTqweVy1p09YkNaU37Ik+TtKAWhAV/9GBT3s9CQ
        2/O3wzT1u8BM58siSxBWihc1WmELwIfWR46A3YF9a2smG2Ly+8lgNdfQ31tuTJ83mBTaET4PnZkjNMTM
        ybOxMH+hjhkjM2lUsiYvaD5XgTNzNnK5Oqp7e9PAzi/jPCSLbW54DcpT3hdNoxJ3UygI1d1l4pOjsNJT
        caD/ag9EbZ2OlQQrS8vIKxovyfTaroFbmxrIb6aiFTOseFCnl405S4ZzgibPGgAT31VA7F/eqye2vdwN
        2nCZMuTiZ3s5Q5D5iwK48rEhdx++LC9u+LRr9x++Smm1n0qW39jqqdpLNhJFifygl0XM8IDaecsUtbeV
        yI7wdXB4EWXIpaNPDEm7FAv9O7/CrYvxxWnZgcspbFRWNezNVx7nLR1hEROXSNCgY4EDrUR2hG+CIsso
        QyrSnxiCfDJjEODbRZwg8sV6foIbmipbv85GKMNZ/6trLqyrWIEtYcOf+5CiNoeGuqxzObU5xMyaHTP5
        bksaRJWxyTCNUCt7Vp+bFNi1+KrkN7DwzmR0t/ZWa1ROIUxn+ilon4ky5HS5tSHJpTFsbiQny+YM+nVq
        e5tpN4KX0TmhVkoD2MVNY971fhwfOgkytwQ6haQF/qBfNJQWtRmcj55czwjkx+B4yPzyiRlmTuSuhZLE
        8CZzavcS8vlQqw/7dOSWjLBC83I2L7DJsRp0e9x7nR9f16+D27mbncIXySGkmM6getMC0pDbMfvqmYGU
        f5kApqupzeK7wu3kc36ZsQ7Gq1+H/p3a3m32q2FfL5k3czcem96hiCnkDZvC1+lRULh8NCmmM7i5YTVp
        yLV9tCEllYdJkR3hwYX95LMiieFTuO5L7SXZ56OQq3h5HQtc7MPRh6+yjWnqYC3UnIgmb+YoN1iNKV41
        jhTSWXwfuYU0RDjCsnAiD8qPFoHxyhFSbHt4eDGRfF4EtZuj0wBqyTT9Va2UDOFlti9waZyNEh6M7N7N
        GLs0mfWTB8gbOco3mTFQvHo8KaIz+TEkjjSkqNA6oZvJSCiDjB2fQ7X+FCm2PTysPEQ+s5k7Zw9B4toc
        GNWrJ5v3yB449CKMNS/ulen6hftgX2SuUwy5mb0eStZOJAW0SVgAlK6ZyMy0r2X9GEwbkltFGFKZyJmB
        ZO6qhAcX00jBbWGPIXiP+JXHue4Lh9m83LaDnZA86E1vI5rhLEMuxE4jxaMoWKaDK/sXwW0DMzIrBm4Z
        NnHXuHJgMXm8kJ+W7SYNoUZY+qwsiyHItZxcUnBb2GsIMvStjvjOP5mX23aoFTL9yHfedpohtwwbccGP
        FE8IJvualDDyOtePRZDnCLkXvaGeGfdD4+ubwciIr+2uzJxLKSYFt4Ujhozq2d2IGvNy2w48eMQ7b5vs
        MSR/7Ww4GTS5HllhH8PXGTHcMVjDC1i3Q4lXlyKW7K8fX1XvHma+YcNu6jwh1LCXNORCspUZyNnEUiuh
        H11KhjNr5kLO8umNkhU2ldOCKjdS15CAnj3wd88cM4QldM4MW4ZkLvsbHJk9rh7H502E6+lPRma2uqzz
        G6ew7mm91bWF3GSDAupcIWdXjIb7y3fWMyW72jqHZGRmW5mBlB62biE4etIvnQJpgRMa5djcCZwWVLkR
        K0N69cA/lXg6htgLilkSNaGeeIUrRsGVBJYvcmvzRGPc0EfXO78hqjcvqmdIUYEgqR8stTIDuZR+xsoQ
        e3Goy+rV89kbgtzK2QhXDyyBi9tmMGZySRqNoo6lqDkaTopPsswfvt0QbWVIdUKdieEX8ZCxs9LKDOS6
        wUAKbovn0pDmciVhIS1+AxSFj4G70TEWQ34I2wdZNXwrKT9sZYSZu0V6UnBbtEhDyrdMJYVvjMLlo6Bm
        UwjcD97HmWJ+Y5hRctTKCDP/V/l05yHIC2EITiztGak1RHlcIFw8vpfrtrj5SOkRKyOQ7D0VpNj20OIM
        cbS7oijPCH+SQy4fsDIDKThYRoptDy3KkJvZG6Ao4kNSZEfAFYDS9OUWUzL2llsZUnq4hBTbHlqUIZ/v
        nksK3GSOsDyCoyzBsklJsvWk0BHcxpDq1FVQsTek2XxxJJK8/pfHwu1edrGXsnV/A31cObfsXnfoa4ir
        IJfgv82Jhetp6xrlWmoU04J+BsRlhiTP+AAOTPZvNikzP6x3bZwInl05lhS1uZTvirIIVJeanDwrMx6c
        30+Wl+LwjDH1nsGMywy5lhYFlw4ubzY1aWusr23Y3PTlervQwYW4GCszED1rMbcKMq1M+S5/J9zKZBPb
        RriRvp7TwuoZ6vAC5JBNUL75Y84UeyjfMLlJVCWsgOJDZ+qZcvNMtpUptmhxw15bUCI5wm9VR+F+WTrc
        P58Oj9j/qWMaQzREACWSKxENEUCJ5EpEQwRQIrkS0RABlEiuRDREACWSKxENEUCJ5ErcxhD90r+S79Sb
        S07EdPJ+DUGJ1BCFMfPI9+LNAd+poxZU2RCXGVK4PpD7DRNnUxK7kLxfQ1DCN0TVgQjIj5rjVE5FzuK0
        oMqGiF2WixFziABKJFciGiKAEsmViIYIoERyJaIhAiiRXIloiABKJFciGiKAEsmViIYIoERyJW5jSMW+
        ECjaPP+pczkpgry/GUokM3cMW6EyfvlTpSIulNOCKhviMkNSZo0lX/g7m6xGftUfoYwwc3r1LPKaziaV
        aUGVDXGZIbeyN8IN/fqnjvnP2hqCMsKM8XIK/Fpx6Kny07l4TguqbIiYQ1yMmNQFUCK5EtEQAZRIrkQ0
        RAAlkisRDRFAieRKREMEUCK5EtEQAZRIrsRtDLmZs4mcNzibWwb6/mYokcwYr6SScwdngvMQ1IIqG+Iy
        Q1JnjyNnrc4G37NT9zdDGWEmf/Vs8prOBn85gyob4jJDyncvhTPRc546VYkryPuboYwwczs7Fsq3L32q
        nItdzGlBlQ0Rc4iLEZO6AEokVyIaIoASyZWIhgigRHIlLjWk+KB7G3LLsAVM1U3/AEtn8KsNQ749++Sj
        BJttSG5cCnkTd+GL9F3w8OpJUihX8cv5BLJsZm7kH3eeIfujDFCTQX9QsDuQseMYXM49RwrlCoxXUuBu
        /laybMid/G2Ql3DBeYYgqRsyoPrETvKGz4qbOVsgb+9hrnz4oDeKi8B41bVd1+PLh+H7sw3rcjd/B1w4
        Xmgxw2mGIAmrDZAW+xm76LFnzsntaXBobbalbOaHPX2wEqoMZXA179xTpzqvGK7lZUNNrp6kSp8HWbuf
        GGGmaYa8U98QdyVuZQ6kb6uo9+DuSkDPJnzm4vBuXS2fSurubF12Ag6uzScf3h1hvY/jn0o6tGsX4+6I
        LFIAd2JPRDasnLsXVgbuhbQt50kB3Iljm8sAtXXIEI1ScnLwm52MUfMTYUvIcdgZrodd4ZnuxYpMiA35
        DLCM/r36mHS9+5jWzE/iTErdUAJHNpW6FSkbi2HvKgOsWZAEqC1qzMttO/Brr7VKuSliThysnnfIrVk1
        NwF8vduakFWBCeQx7kTE7DhAbTUK2TZebtuhVcr64wfGT+g3EiLnHSQv7C589P5oy9cLfTRwDHmMu4Ba
        Tug3ovbD+L1a+/Fy2xfMwQQ80b9Xb9N03TSYM3aBWzE9YDroer/HfY2qVilNMn/lq+7d90y4jzrnWTLN
        fyqnJZaRlXUvL7P9gV/Po1ZIQzRK2U+1F3FDsGxKSZiuY8d/RFiiXO7u5cWvqcCvC+Rldjxqv0ZV0lmt
        knV1J/DLjH3atfs9X0xL4DbcR53zLEENUUu+mGKIIYYYz394ePw//2JBTD246YAAAAAASUVORK5CYII=
</value>
  </data>
</root>